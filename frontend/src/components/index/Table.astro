---
import Link from "../core/Link.astro";
import Network from "../utils/Network.astro";
import Status from "../utils/Status.astro";

type TopCampaign = {
  name: string;
  participants: number;
  network: string;
  status: string;
  link: string;
};

type RecentClaim = {
  campaign: string;
  link: string;
  address: string;
  date: string;
  network: string;
  tokenId: string;
};

const typeguard = (x: TopCampaign | RecentClaim): x is RecentClaim => {
  return (x as RecentClaim).campaign !== undefined;
};

const getAddressLink = (address: string, network: string) => {
  switch (network?.toLowerCase()) {
    case "ethereum":
      return `https://etherscan.io/address/${address}`;
    case "matic":
      return `https://polygonscan.com/address/${address}`;
    case "bsc":
      return `https://bscscan.com/address/${address}`;
    case "avalanche":
      return `https://snowtrace.io/address/${address}`;
    case "fantom":
      return `https://ftmscan.com/address/${address}`;
    case "arbitrum":
      return `https://arbiscan.io/address/${address}`;
    case "optimism":
      return `https://optimistic.etherscan.io/address/${address}`;
    default:
      return "";
  }
};

export interface Props {
  columnNames: string[];
  data: TopCampaign[] | RecentClaim[];
}

const { columnNames, data } = Astro.props;
---

<div class="overflow-x-scroll md:overflow-hidden">
  <table class="w-full">
    <thead>
      <tr class="text-left font-mono uppercase text-xs text-gray-600">
        {columnNames.map((name) => <th class="py-2 px-4">{name}</th>)}
      </tr>
    </thead>

    <tbody class="text-sm">
      {
        data.map((object) => {
          if (typeguard(object))
            return (
              <tr class="border-b border-gray-200">
                <td class="py-2 px-4">
                  <Link
                    external
                    href={getAddressLink(object.address, object.network)}
                  >
                    {object.address}
                  </Link>
                </td>
                <td class="py-2 px-4">
                  <Link external href={object.link}>
                    {object.campaign}
                  </Link>
                </td>
              <td class="py-2 px-4">{object.tokenId}</td>
                <td class="py-2 px-4">
                  <Network name={object.network} />
                </td>
                <td class="py-2 px-4">{object.date}</td>
              </tr>
            );
          else
            return (
              <tr class="border border-gray-200">
                <td class="px-4 py-2">
                  <Link external href={object.link}>
                    {object.name}
                  </Link>
                </td>
                <td class="px-4 py-2">{object.participants}</td>
                <td class="px-4 py-2">
                  <Network name={object.network} />
                </td>
                <td class="px-4 py-2">
                  <Status name={object.status} />
                </td>
              </tr>
            );
        })
      }
    </tbody>
  </table>
</div>
